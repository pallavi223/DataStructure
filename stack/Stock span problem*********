Input: 
N = 7, price[] = [100 80 60 70 60 75 85]
Output:
1 1 1 2 1 4 6



   //Function to calculate the span of stockâ€™s price for all n days.
    vector <int> calculateSpan(int price[], int n)
    {
         //step1: Nearest Greater element(NGL) index from left
         vector<int> v;
        //pair of stack to store NGL or indexs
        stack<pair<int,int>> s;
        
        for(int i=0;i<n;i++){
            
            if(s.size() == 0){
                v.push_back(-1);
            }
            else if(s.size() > 0 && s.top().first > price[i]){
                v.push_back(s.top().second);
            }
            else if(s.size() > 0 && s.top().first <= price[i]){
                while(s.size() > 0 && s.top().first <= price[i]){
                    s.pop();
                }
                //stack become empty
                if(s.size() == 0){
                    v.push_back(-1);
                }
                else{
                    v.push_back(s.top().second);
                }
            }
            //push element and pair in stack
            s.push({price[i], i});
            
        }
       
       for(int i=0;i<v.size(); i++){
           v[i] = i-v[i];  //index - NGL index
       }
       return v;
    }
