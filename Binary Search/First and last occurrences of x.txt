
n=9, x=5
arr[] = { 1, 3, 5, 5, 5, 5, 67, 123, 125 }
Output:  2 5



int firsOcc(int arr[], int n , int x){
       int start = 0;
    int end = n-1;
    int mid = start+(end-start)/2;
    int ans = -1;
    while(start<=end){
        //find for occurence of the ele
        if(arr[mid] == x){
            ans = mid;
            //left traverse 
            end = mid-1;
        }
        else if(arr[mid] > x){
            end = mid-1;
        }
        else{
            start = mid+1;
        }
        mid = start+(end-start)/2;
    }
    return ans;
}
int lastOcc(int arr[], int n , int x){
       int start = 0;
    int end = n-1;
    int mid = start+(end-start)/2;
    int ans = -1;
    while(start<=end){
        //find for occurence of the ele
        if(arr[mid] == x){
            ans = mid;
            //right traverse 
            start = mid+1;
        }
        else if(arr[mid] > x){
            end = mid-1;
        }
        else{
            start = mid+1;
        }
        mid = start+(end-start)/2;
    }
    return ans;
}


vector<int> find(int arr[], int n , int x )
{
  
  
  return {firsOcc(arr, n , x), lastOcc(arr, n , x)} ;
 
        
    
}
