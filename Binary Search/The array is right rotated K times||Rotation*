Input:
N = 5
Arr[] = {5, 1, 2, 3, 4}
Output: 1


	int findKRotation(int arr[], int n) {
	    int start=0;
	    int end = n-1;
	  
	    while(start <= end){
	        
	         int mid = start+(end-start)/2;
	        //to find minimum element (its smaller than both of its next & prev ele)
	        int next = (mid+1)%n;
	        int prev =  (mid+n-1)%n;
	        
	        if(arr[mid] < arr[next] && arr[mid] < arr[prev]){
	            return mid;
	        }
	      
	        else if(arr[mid] < arr[end]){
	                end = mid-1;
	            }
	            //if mid is not the mini ele than move unsorted part of the array
	         else {
	                start = mid+1;  //move right
	            }
	        
	    }
	   return 0;
	}

###############################################
 int findKRotation(int arr[], int n) {

     // code here

     int j=0;

     int last=arr[n-1];

     for(int i=0; i<n-1; i++){

         if(arr[i]>=last){

             j++;

         }

     }

     return j; 

     

 }
