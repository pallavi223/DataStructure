2
1 2 3 4 5 6 -1
2
5 4 3 7 9 2 -1
4 


Node* kReverse(Node* head, int k) {
    // Write your code here.
     if(head == NULL)
         return NULL;
        
       
        //step1: reversed first k nodes
        Node* next = NULL;
        Node* curr = head;
        Node* prev = NULL;
        int count = 0;
        while(curr != NULL && count<k){
            next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
            count++;
           
        }
        
        //2.step --> recursion will reverse other nodes
        if(next != NULL){
            head -> next = kReverse(next, k);
        }
        
        //3. return head of reversed ll
        return prev;
    
}
