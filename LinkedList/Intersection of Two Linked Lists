Input: intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3
Output: Intersected at '8'

1. Brute Force T(C) = O(M*N)
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        
        ListNode* temp = NULL;
        while(headA != NULL){
              temp = headB;
              while(temp != NULL){
                  if(headA == temp)
                      return headA;
               temp = temp->next;
              }
            headA = headA->next;
        }
       return NULL;
    }
};


############################## Efficient approcah --> Using two pointer  T(C) = O(n+m)   S(C) = 1
 ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        //using two pointer apporach
        ListNode* ptr1 = headA;
        ListNode* ptr2 = headB;
        //jaise hi barbar hojyga means hme intersection ele milgya
        while(ptr1 != ptr2 ){
             if(ptr1 == NULL)
                 ptr1 = headB;
             else
                 ptr1 = ptr1->next;
              
            if(ptr2 == NULL)
               ptr2 = headA;
            else
               ptr2 = ptr2->next;
        }

     return ptr1;
    }
