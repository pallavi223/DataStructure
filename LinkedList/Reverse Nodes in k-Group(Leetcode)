Input: head = [1,2,3,4,5], k = 3
Output: [3,2,1,4,5]  


    ListNode* reverseKGroup(ListNode* head, int k) {
           ListNode* cursor = head;
        for(int i = 0; i < k; i++){
            if(cursor == NULL) 
                return head;
            cursor = cursor->next;
        }
        
       
        //step1: reversed first k nodes
        ListNode* next = NULL;
        ListNode* curr = head;
        ListNode* prev = NULL;
        int count = 0;
        while(curr != NULL && count<k){
            next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
            count++;
           
        }
        
        //2.step --> recursion will reverse other nodes
        if(next != NULL){
            head -> next = reverseKGroup(next, k);
        }
        
        //3. return head of reversed ll
        return prev;
    }
